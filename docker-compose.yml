version: '3.9'

services:
  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: btcuser
      POSTGRES_PASSWORD: btcpass
      POSTGRES_DB: btcdb
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'btcuser']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  bitcoin:
    image: ruimarinho/bitcoin-core:24
    restart: always
    command:
      - -printtoconsole
      - -testnet=1
      - -server=1
      - -rpcuser=user
      - -rpcpassword=password
      - -rpcallowip=0.0.0.0/0
      - -rpcbind=0.0.0.0
    ports:
      - '18332:18332'
      - '18333:18333'
    healthcheck:
      test:
        [
          'CMD',
          'bitcoin-cli',
          '-testnet',
          '-rpcuser=user',
          '-rpcpassword=password',
          'getblockchaininfo'
        ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - bitcoin-data:/home/bitcoin/.bitcoin

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    entrypoint:
      - /usr/src/app/scripts/start-with-migrations.sh
    env_file:
      - backend/.env.docker
    environment:
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
      bitcoin:
        condition: service_healthy
    ports:
      - '3000:3000'

  watcher:
    build:
      context: ./backend
      dockerfile: Dockerfile
    entrypoint:
      - /usr/src/app/scripts/start-watcher.sh
    env_file:
      - backend/.env.docker
    environment:
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
      bitcoin:
        condition: service_healthy

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    environment:
      EXPO_PUBLIC_API_BASE_URL: http://api:3000
      EXPO_PUBLIC_BITCOIN_RPC_URL: http://bitcoin:18332
    depends_on:
      api:
        condition: service_started
    ports:
      - '8081:8081'
    command:
      - npm
      - run
      - start
      - --
      - --tunnel
      - --non-interactive

volumes:
  pgdata:
  bitcoin-data:
